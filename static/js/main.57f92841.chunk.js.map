{"version":3,"sources":["assets/pokemon-logo.png","assets/pokeball.gif","assets/pokemon/no-image.jpg","serviceWorker.js","redux/pokemon-list/reducer.js","redux/my-pokemon-list/reducer.js","redux/total-owned/reducer.js","store.js","config/index.js","components/styled/general.js","components/styled/constants.js","layout/header.js","layout/footer.js","graphQl/pokemon-list.js","components/break.js","components/pagination.js","pages/pokemon-list/index.js","pages/pokemon-list/column.js","redux/total-owned/action.js","graphQl/pokemon-detail.js","components/styled/pokemon-detail.js","pages/pokemon-detail/index.js","redux/my-pokemon-list/action.js","pages/my-pokemon-list/column.js","pages/my-pokemon-list/index.js","pages/404/index.js","pages/index.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","pokemonListReducer","action","type","data","myPokemonListReducer","totalOwnedReducer","Object","assign","persistConfig","key","storage","rootReducer","combineReducers","pokemonList","myPokemonList","totalOwned","persistedReducer","persistReducer","store","createStore","persistor","persistStore","MENU","HOME","POKEMON","MY_POKEMON_LIST","Tabs","styled","div","PokemonName","h3","LinkText","span","LayoutHeader","pageTitle","useContext","TitleContext","title","isDetail","useEffect","header","document","querySelector","headerTop","offsetTop","handleScroll","scrollY","classList","add","remove","addEventListener","removeEventListener","menu","id","Item","to","Header","overlay","trigger","href","className","onClick","e","preventDefault","MenuOutlined","src","logo","alt","LayoutFooter","Footer","GET_POKEMONS","gql","Break","props","height","TablePagination","StyledPagination","Pagination","showQuickJumper","current","page","total","totalData","onChange","goTo","PokemonList","useSelector","history","useHistory","titleContext","useState","offset","setOffset","setPage","setPokemonList","loading","setLoading","gqlVariables","useQuery","variables","message","pokemons","useGetPokemon","limit","changeTitle","params","hash","split","pageTemp","paginationElement","getElementsByClassName","initializeData","results","dataTemp","JSON","parse","stringify","forEach","item","name","preventExtensions","a","lastPage","Math","floor","count","push","dataSource","columns","dataIndex","render","text","pagination","storeTotalOwnedPokemon","GET_POKEMON_DETAIL","PokemonImageSection","PokemonImage","img","DetailContent","section","DetailListItem","ButtonContainer","TotalSection","TotalLabel","TotalValue","ErrorMessage","LabelValue","lable","value","style","marginBottom","textTransform","color","PokemonDetail","timeout","dispatch","useDispatch","nickname","setNickname","buttonDisabled","setButtonDisabled","modalVisible","setModalVisible","errorMessage","setErrorMessage","url","pokemon","useGetPokemonDetail","length","scrollTo","savePokemon","pokemonName","caughtTime","moment","format","storeMyPokemonList","catchPokemon","setTimeout","random","Modal","warning","content","okText","Pokeball","LeftOutlined","goBack","titleBefore","gutter","xs","md","sprites","front_default","NoImage","marginTop","weight","moves","map","move","types","index","slot","visible","closable","onOk","onCancel","footer","disabled","placeholder","onKeyUp","input","i","toLowerCase","trim","clearTimeout","checkNickname","target","releasePokemon","record","align","MyPokemonList","myPokemon","confirm","idx","splice","cancelText","Page404","React","createContext","PokemonApp","setTitle","settitleBefore","Provider","newTitle","exact","path","component","client","ApolloClient","ssrMode","uri","process","cache","InMemoryCache","ReactDOM","getElementById","URL","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,iKCYrCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,uCCvFlDC,EATY,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIS,EAAW,uCACjD,OAAOA,EAAOC,MACR,IAAK,mBACD,OAAOD,EAAOE,KAClB,QACI,OAAOX,I,SCMJY,EAXc,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIS,EAAW,uCACjD,OAAOA,EAAOC,MACV,IAAK,qBACD,MAAM,GAAN,mBAAWV,GAAX,YAAqBS,EAAOE,OAChC,IAAK,uBACD,OAAO,YAAIF,EAAOE,MACtB,QACI,OAAOX,ICIJa,EAXW,WAAyB,IAAxBb,EAAuB,uDAAf,GAAIS,EAAW,uCAChD,OAAOA,EAAOC,MACR,IAAK,yBACD,OAAOI,OAAOC,OAAO,GAAIf,EACvBS,EAAOE,MAEb,QACI,OAAOX,ICIbgB,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAcC,YAAgB,CAClCC,YAAab,EACbc,cAAeV,EACfW,WAAYV,IAGRW,EAAmBC,YAAeT,EAAeG,GAG1CO,EAAQC,YAAYH,GACpBI,EAAYC,YAAaH,G,2DCvBzBI,EAAO,CAClBC,KAAK,GAAD,OAJkB,KAKtBC,QAAQ,GAAD,OALe,IAKf,WACPC,gBAAgB,GAAD,OANO,IAMP,oB,upCCIV,IAAMC,EAAOC,IAAOC,IAAV,ICJU,UAFN,UAGS,UANF,UAKD,WD6CdC,EAAcF,IAAOG,GAAV,IClDI,UACI,WDyDnBC,EAAWJ,IAAOK,KAAV,ICxDA,WC4ENC,MApEf,WACE,IACMC,EADeC,qBAAWC,IACDC,MACzBC,EAAyB,mBAAdJ,EAGjBK,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,WAChCC,EAAYH,EAAOI,UAEzB,SAASC,IACHrE,OAAOsE,QAAUH,EACnBH,EAAOO,UAAUC,IAAI,oBAErBR,EAAOO,UAAUE,OAAO,oBAK5B,OAFAzE,OAAO0E,iBAAiB,SAAUL,GAE3B,WACLrE,OAAO2E,oBAAoB,SAAUN,MAEtC,IAGH,IAAMO,EACJ,kBAAC,IAAD,CAAMC,GAAG,QACP,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAASC,GAAIjC,EAAKC,MAAlB,iBAEF,kBAAC,IAAK+B,KAAN,KACE,kBAAC,IAAD,CAASC,GAAIjC,EAAKG,iBAAlB,qBAKN,OACE,6BACE,kBAAC,IAAO+B,OAAR,CAAeH,GAAG,WACbf,GACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUmB,QAASL,EAAMM,QAAS,CAAC,UACjC,uBAAGC,KAAK,IAAIC,UAAU,oBAAoBC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBACxD,kBAACC,EAAA,EAAD,SAKR,yBAAKJ,UAAU,gBACb,8BAAO1B,IAET,yBAAK+B,IAAKC,IAAMN,UAAU,cAAcO,IAAI,WAE3C7B,GACD,kBAACZ,EAAD,KACE,yBAAKkC,UAAS,iBAA0B,iBAAd1B,EAA+B,UAAY,KACnE,4BAAI,kBAAC,IAAD,CAASqB,GAAIjC,EAAKC,MAAlB,kBAEN,yBAAKqC,UAAU,oBACf,yBAAKA,UAAS,iBAA0B,oBAAd1B,EAAkC,UAAY,KACtE,4BAAI,kBAAC,IAAD,CAASqB,GAAIjC,EAAKG,iBAAlB,wBC3DD2C,MARf,WACI,OACI,kBAAC,IAAOC,OAAR,KACI,sE,8VCLZ,IAAMC,EAAeC,cAAH,K,kICYHC,MAXf,SAAeC,GACX,IAAMD,EAAQ7C,IAAOC,IAAV,IACG6C,EAAMC,QAIpB,OACI,kBAACF,EAAD,O,oGCcOG,OAnBf,SAAyBF,GACrB,IAAMG,EAAmBjD,YAAOkD,IAAPlD,CAAH,MAItB,OACI,6BACI,kBAAC,EAAD,CAAO+C,OAAQ,KACf,kBAACE,EAAD,CACIE,iBAAe,EACfC,QAAUN,EAAMO,KAChBC,MAAQR,EAAMS,UACdC,SAAW,SAAArB,GAAC,OAAIW,EAAMW,KAAKtB,MAE/B,kBAAC,EAAD,CAAOY,OAAQ,OCmFZW,OA7Ff,SAAqBZ,GACjB,IAAMjF,EAAQ8F,aAAY,SAAA9F,GAAK,OAAIA,KAC7B+F,EAAUC,cACVC,EAAetD,qBAAWC,IAHR,EAMIsD,mBAAS,GANb,mBAMjBC,EANiB,KAMTC,EANS,OAOAF,mBAAS,GAPT,mBAOjBV,EAPiB,KAOXa,EAPW,OAQcH,mBAAS,IARvB,mBAQjB7E,EARiB,KAQJiF,EARI,OASMJ,oBAAS,GATf,mBASjBK,EATiB,KASRC,EATQ,KAYlB7F,EHDmB,SAAC8F,GAAkB,IAAD,EACVC,mBAAS5B,EAAc,CACtD6B,UAAWF,IADLF,EADmC,EACnCA,QAAShG,EAD0B,EAC1BA,MAAOI,EADmB,EACnBA,KAIxB,OAAI4F,EAAgB,aAChBhG,EAAa,UAAN,OAAiBA,EAAMqG,SAE3BjG,EAAKkG,SGPCC,CAAc,CACzBC,MARY,GASZZ,OAAQA,IAGVpD,qBAAU,WACNyD,GAAW,GAEXP,EAAae,YAAY,gBAGzB,IAAMC,EAASjI,OAAOC,SAASiI,KAAKC,MAAM,KAC1C,GAAGF,EAAO,GAAI,CACV,IAAMG,EAAWH,EAAO,GAAGE,MAAM,KAAK,GACtCd,EAAQe,GACRhB,EAtBM,GAsBIgB,EAtBJ,IAwBVZ,GAAW,KAEZ,IAGHzD,qBAAU,WACN,IAAMsE,EAAoBpE,SAASqE,uBAAT,8BAAuD9B,IAAQ,GACtF6B,GACCA,EAAkB9D,UAAUC,IAAI,iCAIxCT,qBAAU,WACHpC,GACC4G,MAGL,CAAC5G,IAEJ,IAAM4G,EAAiB,WACnB,GAAG5G,EAAK6G,SAAWxH,EAAMuB,WAAY,CACjC,IAAMkG,EAAWC,KAAKC,MAAMD,KAAKE,UAAUjH,EAAK6G,UAChDC,EAASI,SAAQ,SAAAC,GACV9H,EAAMuB,WAAWuG,EAAKC,QAErBD,EAAKvG,WAAavB,EAAMuB,WAAWuG,EAAKC,MACxCjH,OAAOkH,kBAAkBF,OAGjCxB,EAAemB,KAIjB7B,EAAI,uCAAG,WAAO7B,GAAP,eAAAkE,EAAA,yDACLC,EAAWC,KAAKC,MAAMzH,EAAK0H,MA1DrB,IA2DP1H,EAAK0H,MA3DE,GA2Dc,IACpBH,GAAY,GAGN,SAAPnE,EANM,gBAOFyB,IAAS0C,IACR7B,EAAQb,EAAK,GACbY,EAAUZ,EAlER,KAyDD,0BAWO,SAAPzB,EAXA,iBAYO,IAATyB,IACCa,EAAQb,EAAK,GACbY,EAAUZ,EAvER,KAyDD,yCAiBCa,EAAQtC,GAjBT,QAkBLqC,EA3EM,GA2EIrC,EA3EJ,IAyDD,QAoBTgC,EAAQuC,KAAR,gBAAsBvE,IApBb,4CAAH,sDAuBV,OACI,yBAAKK,UAAU,gBACV/C,GAAe,kBAAC,IAAD,CAAOkH,WAAYlH,EAAamH,QC1FnD,CACL,CACE3F,MAAO,eACP4F,UAAW,OACXxH,IAAK,OACLyH,OAAQ,SAACC,GACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS5E,GAAE,UAAKjC,EAAKE,QAAV,mBAA4B2G,IAAQ,kBAACtG,EAAD,KAAesG,OAKtE,CACE9F,MAAO,cACP4F,UAAW,aACXxH,IAAK,aACLyH,OAAQ,SAACC,GAAD,OACN,8BACIA,GAAc,MDuEsDC,YAAY,EAAQrC,QAASA,IACjG,kBAAC,GAAD,CAAiBb,UAAW/E,EAAK0H,MAAO7C,KAAMA,EAAMI,KAAMA,M,oGEjGzDiD,GAAyB,SAACxH,GACnC,MAAO,CACLX,KAAM,yBACNC,KAAMU,I,iWCDZ,IAAMyH,GAAqB/D,cAAH,M,yjDCQjB,IAAMgE,GAAsB5G,IAAOK,KAAV,MAKnBwG,GAAe7G,IAAO8G,IAAV,MAKZC,GAAgB/G,IAAOgH,QAAV,KVdC,WUmBdC,GAAiBjH,IAAOK,KAAV,MAOd6G,GAAkBlH,IAAOC,IAAV,KVzBE,WU8CjBkH,GAAenH,IAAOC,IAAV,KVlDJ,WU2DRmH,GAAapH,IAAOC,IAAV,KVpDM,QU0DhBoH,GAAarH,IAAOC,IAAV,KV1DM,QUgEhBqH,GAAetH,IAAOC,IAAV,KVrEN,WWuBbsH,GAAa,SAAC,GAA4B,IAA1BlH,EAAyB,EAAzBA,KAAMmH,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC/B,OACI,kBAAC,KAAD,CAAKpH,KAAOA,EAAO4B,UAAU,GAAGyF,MAAO,CAAEC,aAAc,IACnD,wBAAID,MAAO,CAAEE,cAAe,YAAaC,MAAO,qBAAwBL,GACxE,uBAAGE,MAAO,CAAEE,cAAe,eAAkBH,KA0P1CK,OArPf,WACI,IA4BIC,EA5BElK,EAAQ8F,aAAY,SAAA9F,GAAK,OAAIA,KAC7BmK,EAAWC,cACXrE,EAAUC,cACVC,EAAetD,qBAAWC,IAJX,EAMSsD,oBAAS,GANlB,mBAMdK,EANc,KAMLC,EANK,OAOWN,mBAAS,IAPpB,mBAOdmE,EAPc,KAOJC,EAPI,OAQuBpE,oBAAS,GARhC,mBAQdqE,EARc,KAQEC,EARF,OASmBtE,oBAAS,GAT5B,mBASduE,EATc,KASAC,EATA,OAUmBxE,mBAAS,IAV5B,mBAUdyE,EAVc,KAUAC,EAVA,KAYfC,EAAM7L,OAAOC,SAASiI,KAAKC,MAAM,KAIjCxG,EF7ByB,SAACoH,GAAU,IAAD,EACVrB,mBAASoC,GAAoB,CAC5DnC,UAAW,CAACoB,KAAMA,KADZxB,EADmC,EACnCA,QAAShG,EAD0B,EAC1BA,MAAOI,EADmB,EACnBA,KAIxB,OAAI4F,EAAgB,aAChBhG,EAAa,UAAN,OAAiBA,EAAMqG,SAE3BjG,EAAKmK,QEqBGC,CAH6B,KAAtBF,EAAIA,EAAIG,OAAO,GAAYH,EAAIA,EAAIG,OAAO,GAAKH,EAAIA,EAAIG,OAAO,IAMlFjI,qBAAU,WACNkD,EAAae,YAAY,oBAE1B,IAGHjE,qBAAU,WACN/D,OAAOiM,SAAS,EAAG,KACpB,IAGH,IA2BMC,EAAc,WAEhB,GAAgB,KAAbb,EAAiB,CAChB,IAAM/I,EAAgB,CAAC,CACnB6J,YAAaxK,EAAKoH,KAClBsC,SAAUA,EACVe,WAAYC,OAASC,OAAO,0BAEhCnB,ECtGsB,SAAC7I,GACjC,MAAO,CACLZ,KAAM,qBACNC,KAAMW,GDmGWiK,CAAmBjK,IAE5B,IAAIC,EAAavB,EAAMuB,WAEnBA,EAAWZ,EAAKoH,MAKhBoC,EAAStB,GAAuB,gBAC3BlI,EAAKoH,KAAOxG,EAAWZ,EAAKoH,MAAM,KALvCoC,EAAStB,GAAuB,gBAC3BlI,EAAKoH,KAAO,KAOrB2C,GAAgB,KAKlBc,EAAe,WACjBhF,GAAW,GAEXiF,YAAW,WACOtD,KAAKuD,SAEL,GACVhB,GAAgB,GAEhBiB,KAAMC,QAAQ,CACV/I,MACI,4BAAI,0BAAMuB,UAAU,gBAAgBzD,EAAKoH,MAAzC,UAEJ8D,QACI,yDAIJC,OAAQ,OAGhBtF,GAAW,KACZ,MAsBP,OAAGD,EACC,yBAAKnC,UAAU,WACX,yBAAKK,IAAKsH,KAAU3H,UAAU,cAAcO,IAAI,aAKpD,yBAAKP,UAAU,kBACX,kBAAC,KAAD,KACI,kBAAC,KAAWN,KAAZ,KACI,kBAACkI,GAAA,EAAD,MACA,kBAACzJ,EAAD,CAAU8B,QAAS,kBAAM0B,EAAQkG,UAAUpI,GAAG,cAAcoC,EAAaiG,cAE7E,kBAAC,KAAWpI,KAAZ,KACI,kDAGR,kBAAC,KAAD,CAAKqI,OAAQ,GACT,kBAAC,KAAD,CAAKC,GAAI,CAAE5J,KAAM,KACb,kBAAC0G,GAAD,KACI,kBAAC,KAAD,CAAKiD,OAAQ,GACT,kBAAC,KAAD,CAAKC,GAAI,CAAE5J,KAAM,IAAM6J,GAAI,CAAE7J,KAAM,KAC/B,kBAACuG,GAAD,KACMpI,EAAK2L,SAAW3L,EAAK2L,QAAQC,cAC3B,kBAACvD,GAAD,CACIvE,IAAK9D,EAAK2L,QAAQC,cAClB5H,IAAI,kBAEV,mBA/CT,kBACrB,kBAACqE,GAAD,CACIvE,IAAK+H,KACL7H,IAAI,gBA4CsB,QAGV,kBAAC,KAAD,CAAKyH,GAAI,CAAE5J,KAAM,IAAM6J,GAAI,CAAE7J,KAAM,IAAMqH,MAAO,CAAE4C,UAAW,SACzD,kBAAC,GAAD,CAAY9C,MAAM,eAAeC,MAAQjJ,EAAKoH,KAAOpH,EAAKoH,KAAO,MACjE,kBAAC,GAAD,CAAY4B,MAAM,SAASC,MAAQjJ,EAAKuE,OAAL,UAAiBvE,EAAKuE,OAAtB,SAAsC,MACzE,kBAAC,GAAD,CAAYyE,MAAM,SAASC,MAAQjJ,EAAK+L,OAAL,UAAiB/L,EAAK+L,OAAtB,SAAsC,WAM7F,kBAAC,KAAD,CAAKP,OAAQ,GACT,kBAAC,KAAD,CAAKC,GAAI,CAAE5J,KAAM,IAAM6J,GAAI,CAAE7J,KAAM,IAAM4B,UAAU,wBAC/C,kBAAC8E,GAAD,KACI,kBAAC,KAAD,CAAKiD,OAAQ,GACT,4BAAI,2CAER,kBAAC,KAAD,CAAKA,OAAQ,GACRxL,EAAKgM,MACFhM,EAAKgM,MAAMC,KAAI,SAAS9E,GACpB,OACI,kBAAC,KAAD,CAAKsE,GAAI,CAAE5J,KAAM,KACb,kBAAC4G,GAAD,KAAiBtB,EAAK+E,KAAK9E,UAKvC,MAKhB,kBAAC,KAAD,CAAKqE,GAAI,CAAE5J,KAAM,IAAM6J,GAAI,CAAE7J,KAAM,IAAM4B,UAAU,wBAC/C,kBAAC8E,GAAD,KACI,kBAAC,KAAD,CAAKiD,OAAQ,GACT,4BAAI,2CAER,kBAAC,KAAD,CAAKA,OAAQ,GACRxL,EAAKmM,MACFnM,EAAKmM,MAAMF,KAAI,SAAS9E,EAAMiF,GAC1B,OACI,kBAAC,KAAD,CAAKX,GAAI,CAAE5J,KAAM,KACb,kBAAC4G,GAAD,KAAiBtB,EAAKpH,KAAKqH,KAA3B,WAAyCD,EAAKkF,KAA9C,SAKZ,OAMpB,mBA9Fc,kBAClB,kBAAC3D,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,oBACA,kBAACC,GAAD,KAAaxJ,EAAMuB,WAAN,OAAiBZ,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMoH,MAAQ/H,EAAMuB,WAAWZ,EAAKoH,MAAQ,IAE9E,kBAAC,EAAD,CAAO7C,OAAQ,KACf,kBAAC,KAAD,CAAQxE,KAAK,UAAU2D,QAASmH,GAAhC,qBAuFA,MACA,kBAAC,KAAD,CACIyB,QAASxC,EACTyC,UAAU,EACVrK,MAAO,4BAAI,0BAAMuB,UAAU,gBAAgBzD,EAAKoH,MAAzC,YACPoF,KAAMjC,EACNkC,SAAU,kBAAM1C,GAAgB,IAChC2C,OAAQ,CACJ,kBAAC,KAAD,CAAQpM,IAAI,OAAOoD,QAAS,kBAAMqG,GAAgB,KAAlD,aAGA,kBAAC,KAAD,CACIzJ,IAAI,SACJP,KAAK,UACL6F,QAASA,EACTlC,QAAS6G,EACToC,SAAU/C,EACVnG,UAAWmG,GAAkB,gBANjC,kBAYJ,6BACI,iEACA,kBAAC,KAAD,CACIgD,YAAY,WACZC,QAAU,SAAAlJ,GAAC,OA9MT,SAACmJ,GAAU,4CAM7B,4BAAAxF,EAAA,yDACiB,KAAVwF,EADP,uBAEQ7C,EAAgB,2BAChBJ,GAAkB,GAH1B,0BAMYkD,EAAI,EANhB,YAMmBA,EAAI1N,EAAMsB,cAAc0J,QAN3C,oBAOWhL,EAAMsB,cAAcoM,GAAGrD,SAASsD,cAAcC,SAAWH,EAAME,cAAcC,OAPxF,wBAQYpD,GAAkB,GAClBI,EAAgB,yFAT5B,2BAMmD8C,IANnD,uBAaIlD,GAAkB,GAClBF,EAAYmD,GACZ7C,EAAgB,IAfpB,6CAN6B,sBAC7BJ,GAAkB,GACdN,IACA2D,aAAa3D,GACbA,EAAU,MAoBdA,EAAUuB,YAxBmB,4CAwBF,KAsLIqC,CAAcxJ,EAAEyJ,OAAOnE,UAE1C,kBAACH,GAAD,KAAekB,OE7QtBnC,GAAU,SAACwF,GACtB,MAAO,CACL,CACEnL,MAAO,eACP4F,UAAW,cACXxH,IAAK,cACLyH,OAAQ,SAACC,GACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS5E,GAAE,UAAKjC,EAAKE,QAAV,mBAA4B2G,IAAQ,kBAACtG,EAAD,KAAesG,OAKtE,CACE9F,MAAO,WACP4F,UAAW,WACXxH,IAAK,WACLyH,OAAQ,SAACC,EAAMsF,GACb,OACE,8BACGtF,KAKT,CACE9F,MAAO,cACP4F,UAAW,aACXxH,IAAK,aACLyH,OAAQ,SAACC,GACP,OACE,8BACGA,KAKT,CACE9F,MAAO,GACP4F,UAAW,SACXxH,IAAK,SACLyH,OAAQ,SAACC,EAAMsF,GACb,OACE,8BACE,kBAAC,KAAD,CAAQvN,KAAK,UAAU2D,QAAS,kBAAM2J,EAAeC,KAArD,aAINC,MAAO,WCaEC,OA5Df,SAAuBtK,GACnB,IAAM7D,EAAQ8F,aAAY,SAAA9F,GAAK,OAAIA,KAC7BW,EAAOX,EAAMsB,cACb6I,EAAWC,cACXnE,EAAetD,qBAAWC,IAGhCG,qBAAU,WACNkD,EAAae,YAAY,qBAE1B,IAGH,IAAMgH,EAAc,uCAAG,WAAOI,GAAP,SAAAnG,EAAA,sDACnB0D,KAAM0C,QAAQ,CACVxL,MACI,gEACsCuL,EAAU/D,SADhD,IAC0D,0BAAMjG,UAAU,gBAAhB,IAAiCgK,EAAUjD,YAA3C,KAD1D,MAIJU,QACI,6BACI,4BAAKuC,EAAU/D,SAAf,uBAGF8C,KAXI,WAWI,OAAD,4GACLJ,EAAQ,EAGZpM,EAAKiM,KAAI,SAAC9E,EAAMwG,GAETxG,EAAKuC,WAAa+D,EAAU/D,WAC3B0C,EAAQuB,MAIhB3N,EAAK4N,OAAOxB,EAAM,GAClB5C,EFrCP,CACLzJ,KAAM,uBACNC,KEmC0CA,KAE1BY,EAAavB,EAAMuB,YAET6M,EAAUjD,cAEpBhB,EAAStB,GAAuB,gBAC3BuF,EAAUjD,YAAc5J,EAAW6M,EAAUjD,aAAa,KAnB1D,8CAuBbW,OAAQ,SACR0C,WAAY,UApCG,2CAAH,sDAwCpB,OACI,yBAAKpK,UAAU,mBACX,kBAAC,IAAD,CAAOmE,WAAY5H,EAAM6H,QAASA,GAAQwF,OClDvCS,GARC,kBACd,yBAAKrK,UAAU,YACb,iDACA,iFACA,kBAAC,IAAD,CAAML,GjBTc,IiBSAK,UAAU,iCAA9B,0BCOSxB,GAAe8L,IAAMC,cAAc,CAC9C9L,MAHmB,eAInBmE,YAAa,eA6CA4H,OA1Cf,WAAuB,IAAD,EACM1I,mBARP,gBAOC,mBACbrD,EADa,KACNgM,EADM,OAEkB3I,mBATnB,gBAOC,mBAEbgG,EAFa,KAEA4C,EAFA,KAGdhM,EAAqB,mBAAVD,EAEjB,OACE,kBAAC,IAAD,KACE,kBAACD,GAAamM,SAAd,CACEnF,MAAO,CACL/G,MAAOA,EACPqJ,YAAaA,EACblF,YAAa,SAACgI,GACZF,EAAejM,GACfgM,EAASG,MAIb,kBAAC,EAAD,MACA,yBAAK5K,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6K,OAAK,EACVC,KAAMpN,EAAKC,KACXoN,UAAWtJ,KAEb,kBAAC,IAAD,CAAOoJ,OAAK,EACVC,KAAI,UAAKpN,EAAKE,QAAV,iBACJmN,UAAWlF,KAEb,kBAAC,IAAD,CAAOgF,OAAK,EACVC,KAAMpN,EAAKG,gBACXkN,UAAYhB,KAEd,kBAAC,IAAD,CAAOgB,UAAYV,OAGvB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOvJ,OAAQpC,EAAW,IAAM,QC7ClCsM,I,cAAS,IAAIC,eAAa,CAC9BC,SAAS,EACTC,IAAKC,iDACLC,MAAO,IAAIC,mBAebC,IAASjH,OAAO,mBAZhB,WACE,OACE,kBAAC,iBAAD,CAAgB0G,OAAQA,IACtB,kBAAC,IAAD,CAAU1N,MAAOA,GACf,kBAAC,IAAD,CAAa6E,QAAS,KAAM3E,UAAWA,GACrC,kBAAC,GAAD,WAOM,MAASqB,SAAS2M,eAAe,SxBR1C,SAAkBtQ,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsQ,IAAIL,iBAAwBxQ,OAAOC,SAASkF,MACpD2L,SAAW9Q,OAAOC,SAAS6Q,OAIvC,OAGF9Q,OAAO0E,iBAAiB,QAAQ,WAC9B,IAAMrE,EAAK,UAAMmQ,iBAAN,sBAEP1Q,IAgEV,SAAiCO,EAAOC,GAEtCyQ,MAAM1Q,EAAO,CACX2Q,QAAS,CAAE,iBAAkB,YAE5BtQ,MAAK,SAAAuQ,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9Q,UAAUC,cAAc8Q,MAAM5Q,MAAK,SAAAC,GACjCA,EAAa4Q,aAAa7Q,MAAK,WAC7BV,OAAOC,SAASuR,eAKpBpR,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAsQ,CAAwBpR,EAAOC,GAI/BC,UAAUC,cAAc8Q,MAAM5Q,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OwBnB/BE,K","file":"static/js/main.57f92841.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon-logo.023d617a.png\";","module.exports = __webpack_public_path__ + \"static/media/pokeball.bc656300.gif\";","module.exports = __webpack_public_path__ + \"static/media/no-image.085f0984.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const pokemonListReducer = (state = [], action) => {\n  switch(action.type) {\n        case \"storePokemonList\":\n            return action.data\n        default:\n            return state\n  }\n}\n\nexport default pokemonListReducer;","const myPokemonListReducer = (state = [], action) => {\n    switch(action.type) {\n        case \"storeMyPokemonList\":\n            return [...state, ...action.data]\n        case \"replaceMyPokemonList\":\n            return [...action.data]\n        default:\n            return state\n  }\n}\n\nexport default myPokemonListReducer;","const totalOwnedReducer = (state = [], action) => {\n  switch(action.type) {\n        case \"storeTotalOwnedPokemon\":\n            return Object.assign({}, state, \n              action.data\n            )\n        default:\n            return state\n  }\n}\n\nexport default totalOwnedReducer;","import {\n  createStore,\n  combineReducers\n} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport pokemonListReducer from './redux/pokemon-list/reducer.js'\nimport myPokemonListReducer from './redux/my-pokemon-list/reducer.js'\nimport totalOwnedReducer from './redux/total-owned/reducer.js'\n\n \nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst rootReducer = combineReducers({\n  pokemonList: pokemonListReducer,\n  myPokemonList: myPokemonListReducer,\n  totalOwned: totalOwnedReducer\n})\n \nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n \n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store)","export const SITE_URL = '/'\nexport const API_URL = process.env.REACT_APP_API_URL\n\nexport const MENU = {\n  HOME: `${SITE_URL}`,\n  POKEMON: `${SITE_URL}pokemon`,\n  MY_POKEMON_LIST: `${SITE_URL}my-pokemon-list`,\n}","import styled from \"@emotion/styled\"\nimport {\n    colorPrimary,\n    colorPrimaryDark,\n    black,\n    white,\n    borderColor,\n    boxShadowColor\n} from './constants'\n\nexport const Tabs = styled.div`\n    display: flex;\n    width: 100%;\n    border-bottom: 1px solid ${borderColor};\n    background-color: ${white};\n    \n    @media (max-width: 992px) {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        z-index: 99;\n        box-shadow: 0 0 5px 1px ${boxShadowColor};\n    }\n\n    .tabpane {\n        padding: 12px 0;\n        width: 50%;\n        text-align: center;\n\n        a {\n            color: ${colorPrimary};\n\n            &:focus, &:active {\n                font-weight: bold;\n                text-decoration: underline;\n            }\n        }\n\n        &.active {\n            a {\n                font-weight: bold;\n                text-decoration: underline;\n            }\n        }\n    }\n\n    .tabpane-divider {\n        border-right: 1px solid ${borderColor};\n    }\n`;\n\nexport const PokemonName = styled.h3`\n    text-transform: capitalize;\n    color: ${colorPrimary};\n    &:hover {\n        color: ${colorPrimaryDark};\n    }\n`;\n\nexport const LinkText = styled.span`\n    cursor: pointer;\n    &:hover {\n        color: ${black}\n    }\n`;","// Color\nexport const colorPrimary = '#f65e2f'\nexport const colorPrimaryDark = '#e74615'\nexport const black = '#000000'\nexport const white = '#FFFFFF'\nexport const red = '#e21212'\nexport const borderColor = '#dbe0e4'\nexport const boxShadowColor = '#8a8a8a'\n\n// Font Size\nexport const totalFontSize = '18px'","import React, { useEffect, useContext } from 'react'\nimport { NavLink, HashRouter } from \"react-router-dom\"\nimport { Layout, Menu, Dropdown } from 'antd'\nimport { MenuOutlined } from '@ant-design/icons'\n\nimport { MENU } from '../config/index'\nimport logo from '../assets/pokemon-logo.png'\nimport { TitleContext } from '../pages/index'\nimport { Tabs } from '../components/styled/general'\n\n\nfunction LayoutHeader() {\n  const titleContext = useContext(TitleContext);\n  const pageTitle = titleContext.title\n  const isDetail = pageTitle === \"Pokemon Detail\"\n\n  // Hanlde header menu on scroll\n  useEffect(() => {\n    const header = document.querySelector('#header')\n    const headerTop = header.offsetTop;\n\n    function handleScroll() {\n      if (window.scrollY > headerTop) {\n        header.classList.add('header--onscroll')\n      } else {\n        header.classList.remove('header--onscroll')\n      }\n    }\n    window.addEventListener('scroll', handleScroll)\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    };\n  }, [])\n\n  // Header menu component\n  const menu = (\n    <Menu id=\"menu\">\n      <Menu.Item>\n        <NavLink to={MENU.HOME}>Pokemon List</NavLink>\n      </Menu.Item>\n      <Menu.Item>\n        <NavLink to={MENU.MY_POKEMON_LIST}>My Pokemon List</NavLink>\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <div>\n      <Layout.Header id=\"header\">\n        { !isDetail &&\n          <HashRouter>\n            <Dropdown overlay={menu} trigger={['click']}>\n              <a href=\"/\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                <MenuOutlined />\n              </a>\n            </Dropdown>\n          </HashRouter>\n        }\n        <div className=\"header-title\">\n          <span>{pageTitle}</span>\n        </div>\n        <img src={logo} className=\"header-logo\" alt=\"logo\" />\n      </Layout.Header>\n      { !isDetail &&\n        <Tabs>\n          <div className={`tabpane${pageTitle === \"Pokemon List\" ? \" active\" : \"\"}`}>\n            <h3><NavLink to={MENU.HOME}>Pokemon List</NavLink></h3>\n          </div>\n          <div className=\"tabpane-divider\"></div>\n          <div className={`tabpane${pageTitle === \"My Pokemon List\" ? \" active\" : \"\"}`}>\n            <h3><NavLink to={MENU.MY_POKEMON_LIST}>My Pokemon List</NavLink></h3>\n          </div>\n        </Tabs>\n      }\n    </div>\n  )\n}\n\nexport default LayoutHeader","import React from 'react'\nimport { Layout } from 'antd'\n\n\nfunction LayoutFooter() {\n    return (\n        <Layout.Footer>\n            <span>Copyright &copy; Shanti Setiani 2020</span>\n        </Layout.Footer>\n    )\n}\n\nexport default LayoutFooter\n","import { gql, useQuery } from '@apollo/client';\n\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\n  \nexport const useGetPokemon = (gqlVariables) => {\n    const { loading, error, data } = useQuery(GET_POKEMONS, {\n      variables: gqlVariables,\n    });\n  \n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    return data.pokemons;\n};","import React from 'react'\nimport styled from \"@emotion/styled\";\n\nfunction Break(props) {\n    const Break = styled.div`\n        height: ${props.height}px;\n        width: 100%;\n    `;\n\n    return (\n        <Break></Break>\n    )\n}\n\nexport default Break\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Pagination } from 'antd'\nimport Break from './break'\n\nfunction TablePagination(props) {\n    const StyledPagination = styled(Pagination)`\n        float: right;\n    `\n\n    return (\n        <div>\n            <Break height={20} />\n            <StyledPagination\n                showQuickJumper\n                current={ props.page }\n                total={ props.totalData }\n                onChange={ e => props.goTo(e) }\n            />\n            <Break height={50} />\n        </div>\n    )\n}\n\nexport default TablePagination\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Table } from 'antd'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { columns } from './column'\nimport { useGetPokemon } from '../../graphQl/pokemon-list'\nimport TablePagination from '../../components/pagination.js'\nimport { TitleContext } from '../index'\n\nfunction PokemonList(props) {\n    const state = useSelector(state => state)\n    const history = useHistory()\n    const titleContext = useContext(TitleContext);\n\n    const LIMIT = 10\n    const [offset, setOffset] = useState(0)\n    const [page, setPage] = useState(1)\n    const [pokemonList, setPokemonList] = useState([])\n    const [loading, setLoading] = useState(false)\n    \n    //Get Pokemon List\n    const data = useGetPokemon({\n      limit: LIMIT,\n      offset: offset,\n    })\n\n    useEffect(() => {\n        setLoading(true)\n        // Set page title\n        titleContext.changeTitle(\"Pokemon List\")\n\n        // Get page from URL\n        const params = window.location.hash.split('?')\n        if(params[1]) {\n            const pageTemp = params[1].split('=')[1]\n            setPage(pageTemp)\n            setOffset(pageTemp*LIMIT-LIMIT)\n        }\n        setLoading(false)\n        // eslint-disable-next-line \n    }, [])\n\n    // Add active class for the current active pagination\n    useEffect(() => {\n        const paginationElement = document.getElementsByClassName(`ant-pagination-item-${page}`)[0]\n        if(paginationElement) {\n            paginationElement.classList.add('ant-pagination-item-active')\n        }\n    });\n\n    useEffect(() => {\n        if(data) {\n            initializeData()\n        }\n        // eslint-disable-next-line \n    }, [data])\n\n    const initializeData = () => {\n        if(data.results && state.totalOwned) {\n            const dataTemp = JSON.parse(JSON.stringify(data.results));\n            dataTemp.forEach(item => {\n                if(state.totalOwned[item.name]) {\n                    // Set totalOwned in Pokemon List\n                    item.totalOwned = state.totalOwned[item.name]\n                    Object.preventExtensions(item)\n                }\n            })\n            setPokemonList(dataTemp)\n        }\n    }\n\n    const goTo = async (to) => {\n        let lastPage = Math.floor(data.count / LIMIT)\n        if(data.count % LIMIT > 0) {\n            lastPage += 1\n        }\n\n        if(to === 'next'){\n            if(page !== lastPage){\n                setPage(page+1)\n                setOffset(page+LIMIT)\n            }\n        }else if(to === 'prev'){\n            if(page !== 0) {\n                setPage(page-1)\n                setOffset(page-LIMIT)\n            }\n        }else{\n            await setPage(to)\n            setOffset(to*LIMIT-LIMIT)\n        }\n        history.push(`?page=${to}`)\n    }\n\n    return (\n        <div className=\"pokemon-list\">\n            {pokemonList && <Table dataSource={pokemonList} columns={columns()} pagination={false}  loading={loading} />}\n            <TablePagination totalData={data.count} page={page} goTo={goTo} />\n        </div>\n    )\n}\n\nexport default PokemonList","import React from 'react'\nimport { NavLink, HashRouter } from \"react-router-dom\";\nimport { MENU } from '../../config/index'\nimport { PokemonName } from '../../components/styled/general'\n\nexport const columns = () => {\n  return [\n    {\n      title: \"Pokemon Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (text) => {\n        return(\n          <HashRouter>\n            <NavLink to={`${MENU.POKEMON}/detail/${text}`}><PokemonName>{ text }</PokemonName></NavLink>\n          </HashRouter>\n        )\n      }\n    },\n    {\n      title: \"Total Owned\",\n      dataIndex: \"totalOwned\",\n      key: \"totalOwned\",\n      render: (text) => (\n        <span>\n          { text ? text : 0 }\n        </span>\n      )\n    }\n  ]\n\n}","export const storeTotalOwnedPokemon = (pokemonList) => {\n    return {\n      type: \"storeTotalOwnedPokemon\",\n      data: pokemonList\n    }\n}","import { gql, useQuery } from '@apollo/client';\n\nconst GET_POKEMON_DETAIL = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      id\n      name\n      sprites {\n        front_default\n      }\n      moves {\n        move {\n          name\n        }\n      }\n      types {\n        type {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const useGetPokemonDetail = (name) => {\n  const { loading, error, data } = useQuery(GET_POKEMON_DETAIL, {\n    variables: {name: name},\n  });\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return data.pokemon;\n};","import styled from \"@emotion/styled\"\nimport {\n    totalFontSize,\n    black,\n    red,\n    borderColor,\n    boxShadowColor\n} from './constants'\n\n\nexport const PokemonImageSection = styled.span`\n    display: block;\n    text-align: center;\n`;\n\nexport const PokemonImage = styled.img`\n    width: 100%;\n    max-width: 300px;\n`;\n\nexport const DetailContent = styled.section`\n    padding: 25px 30px 30px;\n    border-bottom: 1px solid ${borderColor};\n`;\n\nexport const DetailListItem = styled.span`\n    display: list-item;\n    list-style-type: disc;\n    list-style-position: inside;\n    text-transform: capitalize;\n`;\n\nexport const ButtonContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    background-color: #FFF;\n    width: 100%;\n    box-shadow: 0 0 5px 1px ${boxShadowColor};\n    padding: 20px 10px;\n\n    @media (min-width: 993px) {\n        width: 30%;\n        right: 15px;\n        bottom: 15%;\n    }\n\n    button {\n        width: 100%;\n        height: 40px;\n        border-radius: 20px;\n    }\n`;\n\nexport const TotalSection = styled.div`\n    width: 100%;\n    color: ${black};\n\n    @media (min-width: 993px) {\n        margin-bottom: 30px;\n    }\n`;\n\nexport const TotalLabel = styled.div`\n    float: left;\n    font-weight: bold;\n    font-size: ${totalFontSize};\n`;\n\nexport const TotalValue = styled.div`\n    float: right;\n    font-weight: bold;\n    font-size: ${totalFontSize};\n`;\n\nexport const ErrorMessage = styled.div`\n    color: ${red};\n    font-size: 12px;\n`;","import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row, Col, Breadcrumb, Input, Button, Modal } from 'antd'\nimport { LeftOutlined } from '@ant-design/icons'\nimport moment from 'moment'\nimport { storeMyPokemonList, storeTotalOwnedPokemon } from '../../action.js'\n\nimport { useGetPokemonDetail } from '../../graphQl/pokemon-detail'\nimport Pokeball from '../../assets/pokeball.gif'\nimport NoImage from '../../assets/pokemon/no-image.jpg'\n\nimport Break from '../../components/break'\nimport { LinkText } from '../../components/styled/general'\nimport {\n    PokemonImageSection,\n    PokemonImage,\n    DetailContent,\n    DetailListItem,\n    ButtonContainer,\n    TotalSection,\n    TotalLabel,\n    TotalValue,\n    ErrorMessage\n} from \"../../components/styled/pokemon-detail\";\nimport { TitleContext } from '../index'\n\n\nconst LabelValue = ({ span, lable, value }) => {\n    return (\n        <Col span={ span } className=\"\" style={{ marginBottom: 5 }}>\n            <h5 style={{ textTransform: 'uppercase', color: 'rgba(0,0,0,0.25)' }}>{ lable }</h5>\n            <p style={{ textTransform: 'capitalize' }}>{ value }</p>\n        </Col>\n    )\n}\n\nfunction PokemonDetail() {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const titleContext = useContext(TitleContext);\n\n    const [loading, setLoading] = useState(false)\n    const [nickname, setNickname] = useState(\"\")\n    const [buttonDisabled, setButtonDisabled] = useState(true)\n    const [modalVisible, setModalVisible] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    \n    const url = window.location.hash.split('/')\n    const pokemonName = url[url.length-1] !== \"\" ? url[url.length-1] : url[url.length-2]\n\n    // Get Pokemon Detail data from GraphQl\n    const data = useGetPokemonDetail(pokemonName)\n\n    // Set Page Title\n    useEffect(() => {\n        titleContext.changeTitle(\"Pokemon Detail\")\n        // eslint-disable-next-line \n    }, [])\n    \n    // Scroll to the top of the page\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    let timeout;\n    const checkNickname = (input) => {\n        setButtonDisabled(true)\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = null;\n        }\n        async function fake() {\n            if(input === \"\") {\n                setErrorMessage('Nickname must be filled')\n                setButtonDisabled(true)\n                return\n            }\n            for(let i = 0; i < state.myPokemonList.length; i++) {\n                if(state.myPokemonList[i].nickname.toLowerCase().trim() === input.toLowerCase().trim()){\n                    setButtonDisabled(true)\n                    setErrorMessage('There is already a pokemon with the same nickname. Please enter a different nickname.')\n                    return\n                }\n            }\n            setButtonDisabled(false)\n            setNickname(input)\n            setErrorMessage(\"\")\n        }\n    \n        timeout = setTimeout(fake, 300);\n    }\n\n    const savePokemon = () => {\n        // input a nickname for caught pokemon and add to MyPokemonList\n        if(nickname !== \"\") {\n            const myPokemonList = [{\n                pokemonName: data.name,\n                nickname: nickname,\n                caughtTime: moment().format('DD MMM YYYY hh:mm:ss')\n            }]\n            dispatch(storeMyPokemonList(myPokemonList))\n            \n            let totalOwned = state.totalOwned\n\n            if(!totalOwned[data.name]) {\n                dispatch(storeTotalOwnedPokemon({\n                    [data.name]: 1\n                }))\n            }else {\n                dispatch(storeTotalOwnedPokemon({\n                    [data.name]: totalOwned[data.name]+1\n                }))\n            }\n            setModalVisible(false)\n        }\n    }\n  \n    // Function when \"Catch Pokemon!\" button clicked\n    const catchPokemon = () => {\n        setLoading(true)\n\n        setTimeout(() => {\n            var randNum = Math.random();\n      \n            if (randNum < 0.5){\n                setModalVisible(true)\n            }else{\n                Modal.warning({\n                    title: (\n                        <h3><span className=\"modal-header\">{data.name}</span> fled!</h3>\n                    ),\n                    content: (\n                        <div>\n                            Better luck next time...\n                        </div>\n                    ),\n                    okText: 'OK'\n                });\n            }\n            setLoading(false)\n        }, 2000);\n    }\n    \n    const NoImageComponent = () => (\n        <PokemonImage\n            src={NoImage}\n            alt=\"not-found\"\n        />\n    )\n\n    const ButtonSection = () => (\n        <ButtonContainer>\n            <TotalSection>\n                <TotalLabel>Total Owned</TotalLabel>\n                <TotalValue>{state.totalOwned[data?.name] ? state.totalOwned[data.name] : 0}</TotalValue>\n            </TotalSection>\n            <Break height={10} />\n            <Button type=\"primary\" onClick={catchPokemon}>Catch Pokemon!</Button>\n        </ButtonContainer>\n    )\n\n    // Loading animation\n    if(loading) return (\n        <div className=\"loading\">\n            <img src={Pokeball} className=\"loading-img\" alt=\"loading\" />\n        </div>\n    )\n\n    return (\n        <div className=\"pokemon-detail\">\n            <Breadcrumb>\n                <Breadcrumb.Item>\n                    <LeftOutlined />\n                    <LinkText onClick={() => history.goBack()} id=\"breadcrumb\">{titleContext.titleBefore}</LinkText>\n                </Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    <span>Pokemon Detail</span>\n                </Breadcrumb.Item>\n            </Breadcrumb>\n            <Row gutter={0}>\n                <Col xs={{ span: 24 }}>\n                    <DetailContent>\n                        <Row gutter={0}>\n                            <Col xs={{ span: 24 }} md={{ span: 12 }}>\n                                <PokemonImageSection>\n                                    { data.sprites && data.sprites.front_default ?\n                                        <PokemonImage\n                                            src={data.sprites.front_default}\n                                            alt=\"pokemon-front\"\n                                        />\n                                    : <NoImageComponent /> }\n                                </PokemonImageSection>\n                            </Col>\n                            <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ marginTop: \"20px\" }}> \n                                <LabelValue lable=\"Pokemon Name\" value={ data.name ? data.name : \"-\" } />\n                                <LabelValue lable=\"Height\" value={ data.height ? `${data.height} inch` : \"-\" } />\n                                <LabelValue lable=\"Weight\" value={ data.weight ? `${data.weight} gram` : \"-\" } />\n                            </Col>\n                        </Row>\n                    </DetailContent>\n                </Col>\n            </Row>\n            <Row gutter={0}>\n                <Col xs={{ span: 24 }} md={{ span: 12 }} className=\"border-right-default\">\n                    <DetailContent>\n                        <Row gutter={0}>\n                            <h2><strong>Moves</strong></h2>\n                        </Row>\n                        <Row gutter={0}>\n                            {data.moves ?\n                                data.moves.map(function(item){\n                                    return(\n                                        <Col xs={{ span: 12 }}>\n                                            <DetailListItem>{item.move.name}</DetailListItem>\n                                        </Col>\n                                    )\n                                })\n                            :\n                                \"\"\n                            }\n                        </Row>\n                    </DetailContent>\n                </Col>\n                <Col xs={{ span: 24 }} md={{ span: 12 }} className=\"border-right-default\">\n                    <DetailContent>\n                        <Row gutter={0}>\n                            <h2><strong>Types</strong></h2>\n                        </Row>\n                        <Row gutter={0}>\n                            {data.types ?\n                                data.types.map(function(item, index){\n                                    return(\n                                        <Col xs={{ span: 24 }}>\n                                            <DetailListItem>{item.type.name} (slot: {item.slot})</DetailListItem>\n                                        </Col>\n                                    )\n                                })\n                            :\n                                \"\"\n                            }\n                        </Row>\n                    </DetailContent>\n                </Col>\n            </Row>\n            <ButtonSection />\n            <Modal\n                visible={modalVisible}\n                closable={false}\n                title={<h3><span className=\"modal-header\">{data.name}</span> caught!</h3>}\n                onOk={savePokemon}\n                onCancel={() => setModalVisible(false)}\n                footer={[\n                    <Button key=\"back\" onClick={() => setModalVisible(false)}>\n                        Let it go\n                    </Button>,\n                    <Button\n                        key=\"submit\"\n                        type=\"primary\"\n                        loading={loading}\n                        onClick={savePokemon}\n                        disabled={buttonDisabled}\n                        className={buttonDisabled && \"btn-disabled\"}\n                    >\n                        Save Pokemon\n                    </Button>\n                ]}\n            >\n                <div>\n                    <h4>Input a nickname for your Pokemon</h4>\n                    <Input\n                        placeholder=\"Nickname\"\n                        onKeyUp={ e => checkNickname(e.target.value) }\n                    />\n                    <ErrorMessage>{errorMessage}</ErrorMessage>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nexport default PokemonDetail","export const storeMyPokemonList = (myPokemonList) => {\n  return {\n    type: \"storeMyPokemonList\",\n    data: myPokemonList\n  }\n}\n\nexport const replaceMyPokemonList = (myPokemonList) => {\n  return {\n    type: \"replaceMyPokemonList\",\n    data: myPokemonList\n  }\n}","import React from 'react'\nimport { Button } from 'antd'\nimport { NavLink, HashRouter } from \"react-router-dom\";\nimport { MENU } from '../../config/index'\nimport { PokemonName } from '../../components/styled/general'\n\nexport const columns = (releasePokemon) => {\n  return [\n    {\n      title: \"Pokemon Name\",\n      dataIndex: \"pokemonName\",\n      key: \"pokemonName\",\n      render: (text) => {\n        return(\n          <HashRouter>\n            <NavLink to={`${MENU.POKEMON}/detail/${text}`}><PokemonName>{ text }</PokemonName></NavLink>\n          </HashRouter>\n        )\n      }\n    },\n    {\n      title: \"Nickname\",\n      dataIndex: \"nickname\",\n      key: \"nickname\",\n      render: (text, record) => {\n        return(\n          <span>\n            {text}\n          </span>\n        )\n      }\n    },\n    {\n      title: \"Caught Time\",\n      dataIndex: \"caughtTime\",\n      key: \"caughtTime\",\n      render: (text) => {\n        return(\n          <span>\n            {text}\n          </span>\n        )\n      }\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      key: \"action\",\n      render: (text, record) => {\n        return(\n          <span>\n            <Button type=\"default\" onClick={() => releasePokemon(record)}>Release</Button>\n          </span>\n        )\n      },\n      align: \"right\"\n    }\n  ]\n\n}","import React, { useEffect, useContext } from 'react'\nimport { Table, Modal } from 'antd'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { replaceMyPokemonList, storeTotalOwnedPokemon } from '../../action.js'\nimport { columns } from './column'\nimport { TitleContext } from '../index'\n\n\nfunction MyPokemonList(id) {\n    const state = useSelector(state => state)\n    const data = state.myPokemonList\n    const dispatch = useDispatch()\n    const titleContext = useContext(TitleContext);\n    \n    // Set Page Title\n    useEffect(() => {\n        titleContext.changeTitle(\"My Pokemon List\")\n        // eslint-disable-next-line \n    }, [])\n\n    // Function when \"Release\" button clicked\n    const releasePokemon = async (myPokemon) => {\n        Modal.confirm({\n            title: (\n                <h3>\n                    Are you sure you want to release {myPokemon.nickname} <span className=\"modal-header\">[{myPokemon.pokemonName}]</span> ?\n                </h3>\n                ),\n            content: (\n                <div>\n                    <h5>{myPokemon.nickname} will be sad... :(</h5>\n                </div>\n            ),\n            async onOk() { // Remove the released pokemon from MyPokemonList\n                let index = 0\n        \n                // eslint-disable-next-line \n                data.map((item, idx) =>{\n                    // Get the deleted index\n                    if(item.nickname === myPokemon.nickname){\n                        index = idx\n                    }\n                })\n                // Delete myPokemon in redux\n                data.splice(index,1)\n                dispatch(replaceMyPokemonList(data))\n                \n                let totalOwned = state.totalOwned\n\n                if(totalOwned[myPokemon.pokemonName]) {\n                    // Substract total owned of the deleted pokemon\n                    dispatch(storeTotalOwnedPokemon({\n                        [myPokemon.pokemonName]: totalOwned[myPokemon.pokemonName]-1\n                    }))\n                }\n            },\n            okText: 'Bye...',\n            cancelText: \"NO!!!\"\n        });\n    }\n\n    return (\n        <div className=\"my-pokemon-list\">\n            <Table dataSource={data} columns={columns(releasePokemon)} />\n        </div>\n    )\n}\n\nexport default MyPokemonList","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { SITE_URL } from '../../config'\n\nconst Page404 = () => (\n  <div className=\"page-404\">\n    <h1>Page not found :(</h1>\n    <h2>Oops! The page you were looking for doesn't exist</h2>\n    <Link to={SITE_URL} className=\"ant-btn ant-btn-primary fluid\">Back to Pokemon List</Link>\n  </div>\n)\n\nexport default Page404","import React, {useState} from 'react'\nimport { HashRouter, Route, Switch } from \"react-router-dom\"\n\nimport LayoutHeader from '../layout/header'\nimport LayoutFooter from '../layout/footer'\nimport PokemonList from './pokemon-list/'\nimport PokemonDetail from './pokemon-detail/'\nimport MyPokemonList from './my-pokemon-list/'\nimport Page404 from './404/'\nimport Break from '../components/break'\n\nimport { MENU } from '../config/index'\n\n\nconst defaultTitle = 'Pokemon List'\n\nexport const TitleContext = React.createContext({\n  title: defaultTitle,\n  changeTitle: () => {}\n});\n\nfunction PokemonApp() {\n  const [title, setTitle] = useState(defaultTitle)\n  const [titleBefore, settitleBefore] = useState(defaultTitle)\n  const isDetail = title === \"Pokemon Detail\"\n\n  return (\n    <HashRouter>\n      <TitleContext.Provider\n        value={{\n          title: title,\n          titleBefore: titleBefore,\n          changeTitle: (newTitle) => {\n            settitleBefore(title)\n            setTitle(newTitle)\n          }\n        }}\n      >\n        <LayoutHeader />\n        <div className=\"content\">\n          <Switch>\n            <Route exact\n              path={MENU.HOME}\n              component={PokemonList}\n            />\n            <Route exact\n              path={`${MENU.POKEMON}/detail/:name`}\n              component={PokemonDetail}\n            />\n            <Route exact\n              path={MENU.MY_POKEMON_LIST}\n              component={ MyPokemonList }\n            />\n            <Route component={ Page404 } />\n          </Switch>\n        </div>\n        <LayoutFooter />\n        <Break height={isDetail ? 112 : 50} />\n      </TitleContext.Provider>\n    </HashRouter>\n  )\n}\n\nexport default PokemonApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport * as serviceWorker from './serviceWorker'\nimport { store, persistor } from './store'\nimport PokemonApp from './pages/index'\nimport 'antd/dist/antd.css'\nimport './index.scss'\n\n  \nconst client = new ApolloClient({\n  ssrMode: true,\n  uri: process.env.REACT_APP_API_URL,\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <PokemonApp />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.register()"],"sourceRoot":""}